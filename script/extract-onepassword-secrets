#!/bin/bash
set -e

if ! [ -L ~/.gnupg ] || ! [ -L ~/.ssh ]
then
  echo "Run script/setup first!" >&2
  exit 1
fi

onepassword_login() {
  if ! command -v op >/dev/null
  then
    echo "Install op first!" >&2
    exit 1
  fi

  # shellcheck disable=SC2154
  if [ -z "$OP_SESSION_greatisland" ]
  then
    echo "Logging into 1Password..."
    eval "$(op signin greatisland.1password.com ned@greatisland.ca)"
  fi
}

onepassword_get() {
  if [ -f "$HOME/$2" ]
  then
    echo "$2 already exists."
    return
  fi
  echo "Extracting $2..."
  onepassword_login
  op get document "$1" > "$HOME/$2"
  chmod 600 "$HOME/$2"
}

onepassword_get ujs3egnnhrbfloms6s7svrfvgq .ssh/id_rsa
onepassword_get 6taccneel5cnxldnttyetzphyu .gnupg/ned@greatisland.ca.private.gpg-key

if ! [ -f "$HOME/.secrets" ]
then
  echo "Extracting secrets..."
  if ! command -v jq >/dev/null
  then
    echo "Install jq first!" >&2
    exit 1
  fi
  onepassword_login
  GITHUB_TOKEN=$(op get item hrf4bfpluzcbrfpdoe4mu3ri4q | jq -r '.details.sections[1].fields[].v')
  cat > "$HOME/.secrets" <<EOF
export GITHUB_TOKEN=$GITHUB_TOKEN
EOF
  chmod 600 "$HOME/.secrets"
fi

echo "Storing SSH keys in keychain..."
ssh-add -K

echo "Setting up GPG..."
if ! command -v gpg >/dev/null
then
    echo "Install GPG first!" >&2
    exit 1
fi

chmod 700 ~/.gnupg
gpg --import ~/.gnupg/ned@greatisland.ca.public.gpg-key \
             ~/.gnupg/ned@greatisland.ca.private.gpg-key
